name: CI

on:
  pull_request:
    branches: [develop, master]
  push:
    branches: [develop, master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: (0) Checkout code
        uses: actions/checkout@v2
      - name: (0) Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashfiles('**/package-lock.json')}}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: (0) Use NodeJS
        uses: actions/setup-node@v1
        with:
          version: "12.x"
      - name: (1) Install dependencies
        run: npm ci
      - name: (2) Check code formatting
        run: npm run format:check
      - name: (3) Run automated tests
        run: npm run test -- --coverage
        env:
          CI: true
      - name: (4) Upload code coverage as an artifact
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage
      - name: (5) Build project
        if: github.event_name == 'push'
        run: npm run build
      - name: (6) Upload build folder as an artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
      - name: (7) Create a release
        if: github.event_name == 'push' && github.ref == "refs/heads/master"
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITUB_TOKEN }}
      - name: (8a) Deploy to staging server
        if: github.event_name == 'push' && github.ref == "refs/heads/develop"
        run: npx surge --project ./build --domain spotted-pancake.surge.sh
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
      - name: (8b) Deploy to production server
        if: github.event_name == 'push' && github.ref == "refs/heads/master"
        run: npx surge --project ./build --domain spotted-pancake.surge.sh
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}          
